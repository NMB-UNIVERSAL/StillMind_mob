pluginManagement {
    def flutterSdkPath = {
        def properties = new Properties()
        def propertiesFile = new File(rootProject.projectDir, "local.properties")
        if (propertiesFile.exists()) {
            properties.load(new FileInputStream(propertiesFile))
            properties.getProperty('flutter.sdk')
        }
    }
    
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
        def flutterPath = flutterSdkPath()
        if (flutterPath) {
            maven {
                url "${flutterPath}/bin/cache/artifacts/engine/android-gradle-plugin"
            }
        }
    }

    plugins {
        id 'com.android.application' version '8.2.1'
        id 'com.android.library' version '8.2.1'
        id 'org.jetbrains.kotlin.android' version '1.9.0'
    }
}

include ':app'

def localPropertiesFile = new File(rootProject.projectDir, "local.properties")
def properties = new Properties()

assert localPropertiesFile.exists()
localPropertiesFile.withReader("UTF-8") { reader -> properties.load(reader) }

def flutterSdkPath = properties.getProperty("flutter.sdk")
assert flutterSdkPath != null, "flutter.sdk not set in local.properties"

def flutterProjectRoot = rootProject.projectDir.parentFile.toPath()

def plugins = new Properties()
def pluginsFile = new File(flutterProjectRoot.toFile(), '.flutter-plugins')
if (pluginsFile.exists()) {
    pluginsFile.withReader('UTF-8') { reader -> plugins.load(reader) }
}

plugins.each { name, path ->
    def pluginDirectory = flutterProjectRoot.resolve(path).resolve('android').toFile()
    include ":$name"
    project(":$name").projectDir = pluginDirectory
}
